syntax = "proto3";

/**
 * The core types contain re-usable message definitions to be used in various
 * services or aggregate messages.
 *
 * They allow for re-usable utility methods for packing and unpacking to/from
 * the wire format.
 *
 */
package ProSuite.Microservices.Definitions.Shared.Ddx;

import "shared_gdb.proto";


/**
  * The project message
  */
message ProjectMsg {
	
  /** The project id. */
  int32 project_id = 1;

  /** The production model id. */
  int32 model_id = 2;

  /** The project name. */
  string name = 3;

  /** The project short name. */
  string short_name = 4;

  /** The minimum scale denominator. */
  double minimum_scale_denominator = 5;

  /** The tool configuration directory. */
  string tool_config_directory = 6;

  /** Whether read-only datasets are to be excluded from the project worksapce. */
  bool exclude_read_only_datasets_from_project_workspace = 7;
}

/**
  * The ddx model.
  */
message ModelMsg {
  
  /** The model id. */
  int32 model_id = 1;

  /** The model name. */
  string name = 2;

  /** The model's spatial reference. */
  .ProSuite.Microservices.Definitions.Shared.Gdb.SpatialReferenceMsg spatial_reference = 3;

  /** The list of dataset ids. */
  repeated int32 dataset_ids = 4;

  /** The list of error dataset ids. */
  repeated int32 error_dataset_ids = 5;

  /** The workspace handle of the master db. */
  int64 master_db_workspace_handle = 6;

  /** Whether the model element (datasets, associations) names are qualified. */
  bool element_names_are_qualified = 7;
  
  /** Gets the name of the master database (catalog), as used by sql server and 
    * postgresql. NULL, if the database name is not unique across the datasets
	* in which case the dataset names are qualified.
	*/
  string default_database_name = 8;

  /** The name of the master database owner (for ArcSDE master databases), if it 
    * is unique for the harvested datasets.
	*/
  string default_database_schema_owner = 9;

  /** The case sensitivity of the SQL queries. */
  int32 sql_case_sensitivity = 10;

  /** The user / default connection. */
  ConnectionMsg user_connection = 11;
}

/**
  * The ddx connection provider.
  */
message ConnectionMsg {
  
  /** The connection id. */
  int32 connection_id = 1;

  /** The connection name. */
  string name = 2;

  /** The connection type. */
  int32 connection_type = 3;

  /** The connection string. */
  string connection_string = 4;
}

/**
  * The ddx dataset.
  */
message DatasetMsg {

  /** The dataset id. */
  int32 dataset_id = 1;

  /** The dataset name. */
  string name = 2;

  /** The dataset alias name. */
  string alias_name = 3;

  /** The dataset's geometry type or 0 if it has no geometry. */
  int32 geometry_type = 4;

  /** The dataset type once more than object datasets are supported */
  int32 dataset_type = 5;

  /** The path to the default symbology (layer) file. */
  string default_symbology = 6;

  /** The dataset's attributes. */
  repeated AttributeMsg attributes = 7;

  /** The dataset's object categories (object type or object sub-type). */
  repeated ObjectCategoryMsg object_categories = 8;
}

/**
  * The ddx association.
  */
message AssociationMsg {
	
  /** The association id. */
  int32 association_id = 1;

  /** The association name. */
  string name = 2;

  /** The association type:
    * 0 - Foreign key association
	* 1 - Attributed association
    */
  int32 association_type = 3;

  /** The association cardinality. */
  int32 cardinality = 4;

  /** The dataset id of the End1 association end */
  int32 end1_dataset = 5;

  /** The dataset id of the End2 association end */
  int32 end2_dataset = 6;

  /** The id of the End1 association end */
  int32 end1_id = 7;

  /** The id of the End2 association end */
  int32 end2_id = 8;

  /** The name of the End1 association end */
  string end1_name = 9;

  /** The name of the End2 association end */
  string end2_name = 10;

  /** Whether edits of this association shall be documented on end1 */
  bool end1_document_edit = 11;

  /** Whether edits of this association shall be documented on end2 */
  bool end2_document_edit = 12;

  /** Whether cascade deletion is enabled for end1 */
  bool end1_cascade_deletion = 13;

  /** Whether cascade deletion is enabled for end2 */
  bool end2_cascade_deletion = 14;

  /** Whether cascade deletion of orphans is enabled for end1 */
  bool end1_cascade_delete_orphans = 15;

  /** Whether cascade deletion of orphans is enabled for end2 */
  bool end2_cascade_delete_orphans = 16;

  /** The copy policy for end1 */
  int32 end1_copy_policy = 17;

  /** The copy policy for end2 */
  int32 end2_copy_policy = 18;

  /** The association's attributes. The following convention is applied:
    *
    * For foreign key associations:
    * - The first attribute is the foreign key (destination end).
	* - The second attribute is the primary key (origin end).
	*
	* For attributed associations:
    * - The first attribute is the destination end's foreign key field (in the association table).
	* - The second attribute is the primary key of the destination end
	* - The third attribute is the foreign key field of the origin end (in the association table).
	* - The fourth attribute is the primary key of the origin end.
    */
  repeated AttributeMsg attributes = 19;
}

/**
  * The ddx attribute.
  */
message AttributeMsg {

  /** The attribute id. */
  int32 attribute_id = 7;

  /** The name of the field. */
  string name = 1;

  /** The field type corresponding to the ProSuite.Commons.GeoDb.FieldType */
  int32 type = 2;

  /** Whether it is read-only or not. */
  bool is_readonly = 3;

  /** Whether it is object-defining or not. */
  bool is_object_defining = 4;

  /** The attribute role id. */
  int32 attribute_role = 5;

  /** The non-appliccable value. */
  .ProSuite.Microservices.Definitions.Shared.Gdb.AttributeValue non_applicable_value = 6;
}

/**
  * The ddx object category (i.e. the ObjectType or ObjectSubtype).
  */
message ObjectCategoryMsg {

  /** The object category id. */
  int32 object_category_id = 4;

  /** The name of the field. */
  string name = 1;

  /** The subtype code. If this is an ObjectSubtype, the referenced ObjectType's code. */
  int32 subtype_code = 2;

  /** The ObjectSubtype criteria. */
  repeated ObjectSubtypeCriterionMsg object_subtype_criterion = 3;
}

/**
  * The ddx object subtype criterion.
  */
message ObjectSubtypeCriterionMsg {

  /** The name of the referenced attribute. */
  string attribute_name = 1;

  /** The attribute value. */
  .ProSuite.Microservices.Definitions.Shared.Gdb.AttributeValue attribute_value = 2;
}

  /**
  * The object cateogry attribute constraint such as a not-applicable attribute.
  */
  message ObjectCategoryAttributeConstraintMsg {
  
	/** The dataset id. */
	int32 dataset_id = 1;

	/** The object category id. */
	int32 object_category_id = 2;
  
	/** The attribute id. */
	int32 attribute_id = 3;
}